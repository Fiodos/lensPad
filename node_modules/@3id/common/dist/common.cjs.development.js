'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var errorsUtils = require('errors-utils');
var uint8arrays = require('uint8arrays');

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var ThreeIDError = /*#__PURE__*/function (_createNamespaceError) {
  _inheritsLoose(ThreeIDError, _createNamespaceError);

  function ThreeIDError() {
    return _createNamespaceError.apply(this, arguments) || this;
  }

  return ThreeIDError;
}( /*#__PURE__*/errorsUtils.createNamespaceError('3ID'));
function assert(condition, code, message) {
  return errorsUtils.assertAs(condition, ThreeIDError, code, message);
}

assert.isDefined = function (value, message) {
  return assert(value != null, 2, message);
};

assert.isString = function (value, message) {
  if (message === void 0) {
    message = 'Input must be a string';
  }

  return assert(typeof value === 'string', 3, message);
};

function fromHex(hex) {
  return uint8arrays.fromString(hex, 'base16');
}
function toHex(bytes) {
  return uint8arrays.toString(bytes, 'base16');
}

exports.ThreeIDError = ThreeIDError;
exports.assert = assert;
exports.fromHex = fromHex;
exports.toHex = toHex;
//# sourceMappingURL=common.cjs.development.js.map
