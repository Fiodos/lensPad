{"version":3,"file":"common.cjs.development.js","sources":["../src/errors.ts","../src/utils.ts"],"sourcesContent":["import { assertAs, createNamespaceError } from 'errors-utils'\n\nexport class ThreeIDError extends createNamespaceError('3ID') {}\n\nexport function assert(condition: boolean, code: number, message: string): asserts condition {\n  return assertAs(condition, ThreeIDError, code, message)\n}\n\nassert.isDefined = function <T = unknown>(\n  value: T,\n  message: string\n): asserts value is NonNullable<T> {\n  return assert(value != null, 2, message)\n}\n\nassert.isString = function (\n  value: unknown,\n  message = 'Input must be a string'\n): asserts value is string {\n  return assert(typeof value === 'string', 3, message)\n}\n","import { fromString, toString } from 'uint8arrays'\n\nexport function fromHex(hex: string): Uint8Array {\n  return fromString(hex, 'base16')\n}\n\nexport function toHex(bytes: Uint8Array): string {\n  return toString(bytes, 'base16')\n}\n"],"names":["ThreeIDError","createNamespaceError","assert","condition","code","message","assertAs","isDefined","value","isString","fromHex","hex","fromString","toHex","bytes","toString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAEaA,YAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,gBAAkCC,gCAAoB,CAAC,KAAD,CAAtD;SAEgBC,OAAOC,WAAoBC,MAAcC;AACvD,SAAOC,oBAAQ,CAACH,SAAD,EAAYH,YAAZ,EAA0BI,IAA1B,EAAgCC,OAAhC,CAAf;AACD;;AAEDH,MAAM,CAACK,SAAP,GAAmB,UACjBC,KADiB,EAEjBH,OAFiB;AAIjB,SAAOH,MAAM,CAACM,KAAK,IAAI,IAAV,EAAgB,CAAhB,EAAmBH,OAAnB,CAAb;AACD,CALD;;AAOAH,MAAM,CAACO,QAAP,GAAkB,UAChBD,KADgB,EAEhBH,OAFgB;MAEhBA;AAAAA,IAAAA,UAAU;;;AAEV,SAAOH,MAAM,CAAC,OAAOM,KAAP,KAAiB,QAAlB,EAA4B,CAA5B,EAA+BH,OAA/B,CAAb;AACD,CALD;;SCbgBK,QAAQC;AACtB,SAAOC,sBAAU,CAACD,GAAD,EAAM,QAAN,CAAjB;AACD;AAED,SAAgBE,MAAMC;AACpB,SAAOC,oBAAQ,CAACD,KAAD,EAAQ,QAAR,CAAf;AACD;;;;;;;"}