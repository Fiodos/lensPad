import { createNamespaceClient, createNamespaceServer } from '@ceramicnetwork/rpc-postmessage';
import { createPostMessageTransport } from '@ceramicnetwork/transport-postmessage';

var DEFAULT_OPTIONS = {
  onInvalidInput: function onInvalidInput(_input, _error) {// Silence warnings of invalid messages, such as message events sent by third-parties
  },
  // Client requests will be sent without origin restriction
  postMessageArguments: ['*']
};
function createClient(namespace, target, options) {
  if (target === void 0) {
    target = window;
  }

  if (options === void 0) {
    options = DEFAULT_OPTIONS;
  }

  var transport = createPostMessageTransport(window, target, options);
  return createNamespaceClient(transport, namespace, options);
}
function createServer(namespace, methods, target) {
  if (target === void 0) {
    target = window;
  }

  return createNamespaceServer({
    methods: methods,
    namespace: namespace,
    target: target
  });
}

export { createClient, createServer };
//# sourceMappingURL=rpc-window.esm.js.map
