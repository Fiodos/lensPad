{"version":3,"file":"transport-postmessage.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { TransportSubject } from '@ceramicnetwork/transport-subject'\nimport { Subscriber, fromEvent } from 'rxjs'\nimport type { Observable, Observer } from 'rxjs'\nimport { filter } from 'rxjs/operators'\n\n// Similar to the MessagePort interface\nexport interface PostMessageEventMap {\n  message: MessageEvent\n  messageerror: MessageEvent\n}\nexport interface PostMessageTarget extends EventTarget {\n  onmessage: ((this: any, ev: MessageEvent) => any) | null\n  onmessageerror: ((this: any, ev: MessageEvent) => any) | null\n  postMessage(...args: Array<any>): void\n  addEventListener<K extends keyof PostMessageEventMap>(\n    type: K,\n    listener: (this: any, ev: PostMessageEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void\n  removeEventListener<K extends keyof PostMessageEventMap>(\n    type: K,\n    listener: (this: any, ev: PostMessageEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void\n}\n\nexport type MessageFilter = (event: MessageEvent) => boolean\n\n// Workarout for TS error about MessageEvent not being generic\nexport interface IncomingMessage<Data = any> extends MessageEvent {\n  readonly data: Data\n}\n\nexport function createOriginFilter<Event extends MessageEvent>(\n  allowedOrigin: string | Array<string>\n): (event: Event) => boolean {\n  if (!Array.isArray(allowedOrigin)) {\n    allowedOrigin = [allowedOrigin]\n  }\n  return (event: Event) => allowedOrigin.includes(event.origin)\n}\n\nexport function createMessageObservable<MessageData = any>(\n  target: PostMessageTarget,\n  originOrFilter?: string | Array<string> | MessageFilter\n): Observable<IncomingMessage<MessageData>> {\n  const source = fromEvent<MessageEvent>(target, 'message')\n  if (originOrFilter == null) {\n    return source\n  }\n\n  const messageFilter =\n    typeof originOrFilter === 'function' ? originOrFilter : createOriginFilter(originOrFilter)\n  return source.pipe(filter(messageFilter))\n}\n\nexport function createPostMessageObserver<MessageData = any>(\n  target: PostMessageTarget,\n  ...args: Array<any>\n): Observer<MessageData> {\n  return Subscriber.create<MessageData>((message) => {\n    if (message != null) {\n      target.postMessage(message, ...args)\n    }\n  })\n}\n\nexport type PostMessageTransportOptions = {\n  filter?: string | Array<string> | MessageFilter\n  postMessageArguments?: Array<any>\n}\n\nexport function createPostMessageTransport<MsgIn, MsgOut = MsgIn>(\n  from: PostMessageTarget,\n  to: PostMessageTarget = from,\n  { filter, postMessageArguments = [] }: PostMessageTransportOptions = {}\n): TransportSubject<IncomingMessage<MsgIn>, MsgOut> {\n  const source = createMessageObservable<MsgIn>(from, filter)\n  const sink = createPostMessageObserver<MsgOut>(to, ...postMessageArguments)\n  return new TransportSubject(source, sink)\n}\n"],"names":["createOriginFilter","allowedOrigin","Array","isArray","event","includes","origin","createMessageObservable","target","originOrFilter","source","fromEvent","messageFilter","pipe","filter","createPostMessageObserver","args","Subscriber","create","message","postMessage","createPostMessageTransport","from","to","postMessageArguments","sink","TransportSubject"],"mappings":";;;;SA2CgBA,mBACdC;AAEA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,aAAd,CAAL,EAAmC;AACjCA,IAAAA,aAAa,GAAG,CAACA,aAAD,CAAhB;AACD;;AACD,SAAO,UAACG,KAAD;AAAA,WAAkBH,aAAa,CAACI,QAAd,CAAuBD,KAAK,CAACE,MAA7B,CAAlB;AAAA,GAAP;AACD;SAEeC,wBACdC,QACAC;AAEA,MAAMC,MAAM,GAAGC,SAAS,CAAeH,MAAf,EAAuB,SAAvB,CAAxB;;AACA,MAAIC,cAAc,IAAI,IAAtB,EAA4B;AAC1B,WAAOC,MAAP;AACD;;AAED,MAAME,aAAa,GACjB,OAAOH,cAAP,KAA0B,UAA1B,GAAuCA,cAAvC,GAAwDT,kBAAkB,CAACS,cAAD,CAD5E;AAEA,SAAOC,MAAM,CAACG,IAAP,CAAYC,MAAM,CAACF,aAAD,CAAlB,CAAP;AACD;SAEeG,0BACdP;oCACGQ;AAAAA,IAAAA;;;AAEH,SAAOC,UAAU,CAACC,MAAX,CAA+B,UAACC,OAAD;AACpC,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACnBX,MAAAA,MAAM,CAACY,WAAP,OAAAZ,MAAM,GAAaW,OAAb,SAAyBH,IAAzB,EAAN;AACD;AACF,GAJM,CAAP;AAKD;SAOeK,2BACdC,MACAC;MAAAA;AAAAA,IAAAA,KAAwBD;;;gCAC6C;MAAnER,cAAAA;mCAAQU;MAAAA,0DAAuB;;AAEjC,MAAMd,MAAM,GAAGH,uBAAuB,CAAQe,IAAR,EAAcR,MAAd,CAAtC;AACA,MAAMW,IAAI,GAAGV,yBAAyB,MAAzB,UAAkCQ,EAAlC,SAAyCC,oBAAzC,EAAb;AACA,SAAO,IAAIE,gBAAJ,CAAqBhB,MAArB,EAA6Be,IAA7B,CAAP;AACD;;;;"}