"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("rxjs"),t=require("rxjs/operators");function e(r,t){return(e=Object.setPrototypeOf||function(r,t){return r.__proto__=t,r})(r,t)}var n=function(t){var n,o;function p(r,e){var n;return(n=t.call(this)||this)._source=r,n._sink=e,n}o=t,(n=p).prototype=Object.create(o.prototype),n.prototype.constructor=n,e(n,o);var u=p.prototype;return u.next=function(r){var t,e;null==(t=(e=this._sink).next)||t.call(e,r)},u.error=function(r){var t,e;null==(t=(e=this._sink).error)||t.call(e,r)},u.complete=function(){var r,t;null==(r=(t=this._sink).complete)||r.call(t)},u._subscribe=function(t){var e;return null!=(e=this._source.subscribe(t))?e:r.Subscription.EMPTY},p}(r.Subject);function o(r){return function(t){return{__tw:!0,ns:r,msg:t}}}function p(r){return function(t){if(!0!==t.__tw)throw new Error("Input is not a wrapped message");if("string"!=typeof t.ns)throw new Error("Invalid namespace type for wrapped message: expected a string, got "+typeof t.ns);if(t.ns!==r)throw new Error("Invalid namespace for wrapped message: expected "+r+", got "+t.ns);return t.msg}}function u(r){return{wrap:o(r),unwrap:p(r)}}function a(e,n){if(void 0===n&&(n={}),n.throwWhenInvalid)return r.pipe(t.map(e));var o="function"==typeof n.onInvalidInput?n.onInvalidInput:function(r,t){console.warn("Invalid transport input",r,t)};return r.pipe(t.map((function(r){try{return e(r)}catch(t){return o(r,t),null}})),t.filter((function(r){return null!==r})))}function i(t,e){return new r.Subscriber((function(r){null!=r&&t.next(e(r))}))}function s(r,t,e){var o=t.wrap;void 0===e&&(e={});var p=r.pipe(a(t.unwrap,e)),u=i(r,o);return new n(p,u)}exports.TransportSubject=n,exports.createNamespacedTransport=function(r,t,e){return s(r,u(t),e)},exports.createUnwrap=p,exports.createUnwrapOperator=a,exports.createWrap=o,exports.createWrapObserver=i,exports.createWrappedTransport=s,exports.createWrapper=u;
//# sourceMappingURL=transport-subject.cjs.production.min.js.map
