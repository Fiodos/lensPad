import type { DagJWS, DagJWSResult } from 'dids';
import type { EncodedDagJWS, EncodedDagJWSResult } from './types';
export declare function decodeDagJWS({ payload, signatures, link }: EncodedDagJWS): DagJWS;
export declare function encodeDagJWS({ payload, signatures, link }: DagJWS): EncodedDagJWS;
export declare function decodeDagJWSResult({ jws, linkedBlock }: EncodedDagJWSResult): DagJWSResult;
export declare function encodeDagJWSResult({ jws, linkedBlock }: DagJWSResult): EncodedDagJWSResult;
export declare function decodeSignedMap<K extends string>(data: Record<K, Array<EncodedDagJWSResult>>): Record<K, Array<DagJWSResult>>;
export declare function encodeSignedMap<K extends string>(data: Record<K, Array<DagJWSResult>>): Record<K, Array<EncodedDagJWSResult>>;
