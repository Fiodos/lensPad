{"version":3,"file":"idx-tools.cjs.development.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/utils.ts","../src/signing.ts","../src/definitions.ts","../src/encoding.ts","../src/signed/index.ts","../src/validate.ts","../src/publishing.ts","../src/docset.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import type { StreamRef } from '@ceramicnetwork/streamid'\n\nexport function docIDToString(id: StreamRef | string): string {\n  return typeof id === 'string' ? id : id.toString()\n}\n\nexport function applyMap<\n  M extends Record<string, unknown>,\n  V extends M[keyof M] = M[keyof M],\n  R = unknown\n>(inputs: M, callFunc: (input: V) => R): Record<keyof M, R> {\n  return Object.entries(inputs).reduce((acc, [key, value]) => {\n    acc[key as keyof M] = callFunc(value as V)\n    return acc\n  }, {} as Record<keyof M, R>)\n}\n\nexport async function promiseMap<\n  M extends Record<string, unknown>,\n  V extends M[keyof M] = M[keyof M],\n  R = unknown\n>(inputs: M, callFunc: (input: V) => Promise<R>): Promise<Record<keyof M, R>> {\n  const results = await Promise.all(Object.values(inputs).map((value) => callFunc(value as any)))\n  return Object.keys(inputs).reduce((acc, key, i) => {\n    acc[key as keyof M] = results[i]\n    return acc\n  }, {} as Record<keyof M, R>)\n}\n","import type StreamID from '@ceramicnetwork/streamid'\nimport type { DagJWSResult, DID } from 'dids'\n\nimport * as schemas from './schemas'\nimport type { Definition, SignedSchemas, Schema } from './types'\nimport { docIDToString, promiseMap } from './utils'\n\nexport async function signTile<T = unknown>(\n  did: DID,\n  data: T,\n  schema?: StreamID | string\n): Promise<DagJWSResult> {\n  if (!did.authenticated) {\n    throw new Error('DID must be authenticated')\n  }\n\n  const header = {\n    controllers: [did.id],\n    schema: schema ? docIDToString(schema) : undefined,\n  }\n  return await did.createDagJWS({ data, doctype: 'tile', header }, { did: did.id })\n}\n\nexport async function signIDXDefinitions(\n  did: DID,\n  definitionSchema: StreamID | string,\n  definitions: Record<string, Definition>\n): Promise<Record<string, Array<DagJWSResult>>> {\n  const schema = docIDToString(definitionSchema)\n  return await promiseMap(definitions, async (definition: Definition) => {\n    return [await signTile(did, definition, schema)]\n  })\n}\n\nexport async function signIDXSchemas(did: DID): Promise<SignedSchemas> {\n  return await promiseMap(schemas, async (schema: Schema) => {\n    return [await signTile(did, schema)]\n  })\n}\n","import type { DefinitionName, PublishedSchemas } from '@ceramicstudio/idx-constants'\nimport type { DID } from 'dids'\n\nimport { signIDXDefinitions } from './signing'\nimport type { Definition, SignedDefinitions } from './types'\n\nexport function createIDXDefinitions(\n  schemas: PublishedSchemas\n): Record<DefinitionName, Definition> {\n  return {\n    alsoKnownAs: {\n      name: 'Also Known As',\n      description:\n        'Also Known As is a data set that stores a list of accounts that are publicly linked to the users DID',\n      schema: schemas.AlsoKnownAs,\n    },\n    basicProfile: {\n      name: 'Basic Profile',\n      description: 'Basic profile information for a DID',\n      schema: schemas.BasicProfile,\n    },\n    cryptoAccounts: {\n      name: 'Crypto Accounts',\n      description: 'Crypto accounts linked to your DID',\n      schema: schemas.CryptoAccounts,\n    },\n    threeIdKeychain: {\n      name: '3ID Keychain',\n      description: 'Key data for 3ID',\n      schema: schemas.ThreeIdKeychain,\n    },\n  }\n}\n\nexport async function createIDXSignedDefinitions(\n  did: DID,\n  schemas: PublishedSchemas\n): Promise<SignedDefinitions> {\n  const definitions = createIDXDefinitions(schemas)\n  return await signIDXDefinitions(did, schemas.Definition, definitions)\n}\n","import CID from 'cids'\nimport type { DagJWS, DagJWSResult } from 'dids'\nimport { fromString, toString } from 'uint8arrays'\n\nimport type { EncodedDagJWS, EncodedDagJWSResult } from './types'\nimport { applyMap } from './utils'\n\nexport function decodeDagJWS({ payload, signatures, link }: EncodedDagJWS): DagJWS {\n  return { payload, signatures, link: link ? new CID(link) : undefined }\n}\n\nexport function encodeDagJWS({ payload, signatures, link }: DagJWS): EncodedDagJWS {\n  return { payload, signatures, link: link?.toString() }\n}\n\nexport function decodeDagJWSResult({ jws, linkedBlock }: EncodedDagJWSResult): DagJWSResult {\n  return { jws: decodeDagJWS(jws), linkedBlock: fromString(linkedBlock, 'base64pad') }\n}\n\nexport function encodeDagJWSResult({ jws, linkedBlock }: DagJWSResult): EncodedDagJWSResult {\n  return { jws: encodeDagJWS(jws), linkedBlock: toString(linkedBlock, 'base64pad') }\n}\n\nexport function decodeSignedMap<K extends string>(\n  data: Record<K, Array<EncodedDagJWSResult>>\n): Record<K, Array<DagJWSResult>> {\n  return applyMap(data, (records) => records.map(decodeDagJWSResult))\n}\n\nexport function encodeSignedMap<K extends string>(\n  data: Record<K, Array<DagJWSResult>>\n): Record<K, Array<EncodedDagJWSResult>> {\n  return applyMap(data, (records) => records.map(encodeDagJWSResult))\n}\n","import { decodeSignedMap } from '../encoding'\n\nimport encodedDefinitions from './definitions.json'\nimport encodedSchemas from './schemas.json'\n\nexport const signedDefinitions = decodeSignedMap(encodedDefinitions)\nexport const signedSchemas = decodeSignedMap(encodedSchemas)\n","import Ajv from 'ajv'\nimport addFormats from 'ajv-formats'\nimport SecureSchema from 'ajv/lib/refs/json-schema-secure.json'\n\nimport { Definition as DefinitionSchema } from './schemas'\nimport type { Definition, Schema } from './types'\n\nconst ajv = new Ajv({ strict: false })\naddFormats(ajv as any) // Seems there is a type mismatch with ajv-formats\n\nexport const validateDefinition = ajv.compile<Definition>(DefinitionSchema)\n\nexport function isValidDefinition(definition: unknown): boolean {\n  return validateDefinition(definition)\n}\n\nexport const validateSchemaSecure = ajv.compile<Schema>(SecureSchema)\n\nexport function isSecureSchema(schema: Schema): boolean {\n  ajv.compile(schema)\n  return validateSchemaSecure(schema)\n}\n","import type {\n  CeramicApi,\n  CeramicCommit,\n  GenesisCommit,\n  StreamMetadata,\n} from '@ceramicnetwork/common'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport { schemas as publishedSchemas } from '@ceramicstudio/idx-constants'\nimport type {\n  DefinitionName,\n  PublishedDefinitions,\n  PublishedSchemas,\n  SchemaName,\n} from '@ceramicstudio/idx-constants'\nimport isEqual from 'fast-deep-equal'\n\nimport { signedDefinitions, signedSchemas } from './signed'\nimport type {\n  Definition,\n  DefinitionDoc,\n  PublishDoc,\n  PublishedConfig,\n  SchemaDoc,\n  SignedDefinitions,\n  SignedSchemas,\n} from './types'\nimport { promiseMap, docIDToString } from './utils'\nimport { isValidDefinition, isSecureSchema } from './validate'\n\nconst PUBLISH_OPTS = { anchor: false, publish: false }\n\nexport async function createTile<T = unknown>(\n  ceramic: CeramicApi,\n  content: T,\n  metadata: Partial<StreamMetadata> = {}\n): Promise<TileDocument> {\n  if (ceramic.did == null) {\n    throw new Error('Ceramic instance is not authenticated')\n  }\n\n  if (metadata.controllers == null || metadata.controllers.length === 0) {\n    metadata.controllers = [ceramic.did.id]\n  }\n\n  const doc = await TileDocument.create(ceramic, content, metadata)\n  await ceramic.pin.add(doc.id)\n  return doc\n}\n\nexport async function publishDoc<T = unknown>(\n  ceramic: CeramicApi,\n  doc: PublishDoc<T>\n): Promise<TileDocument> {\n  if (doc.id == null) {\n    return await createTile(ceramic, doc.content, {\n      controllers: doc.controllers,\n      schema: doc.schema ? docIDToString(doc.schema) : undefined,\n    })\n  }\n\n  const loaded = await ceramic.loadStream<TileDocument>(doc.id)\n  if (!isEqual(loaded.content, doc.content)) {\n    await loaded.update(doc.content)\n  }\n  return loaded\n}\n\nexport async function createDefinition(\n  ceramic: CeramicApi,\n  definition: Definition\n): Promise<TileDocument> {\n  if (!isValidDefinition(definition)) {\n    throw new Error('Invalid definition')\n  }\n  return await createTile(ceramic, definition, { schema: publishedSchemas.Definition })\n}\n\nexport async function updateDefinition(ceramic: CeramicApi, doc: DefinitionDoc): Promise<boolean> {\n  const loaded = await ceramic.loadStream<TileDocument>(doc.id)\n  if (loaded.metadata.schema !== publishedSchemas.Definition) {\n    throw new Error('Document is not a valid Definition')\n  }\n\n  if (!isEqual(loaded.content, doc.content)) {\n    await loaded.update(doc.content)\n    return true\n  }\n  return false\n}\n\nexport async function publishCommits(\n  ceramic: CeramicApi,\n  [genesis, ...updates]: Array<CeramicCommit>\n): Promise<TileDocument<Record<string, any>>> {\n  const doc = await TileDocument.createFromGenesis<TileDocument<Record<string, any>>>(\n    ceramic,\n    genesis as GenesisCommit,\n    PUBLISH_OPTS\n  )\n  await ceramic.pin.add(doc.id)\n  for (const commit of updates) {\n    await ceramic.applyCommit(doc.id, commit, PUBLISH_OPTS)\n  }\n  return doc\n}\n\nexport async function publishSchema(ceramic: CeramicApi, doc: SchemaDoc): Promise<TileDocument> {\n  if (!isSecureSchema(doc.content)) {\n    throw new Error(`Schema ${doc.name} is not secure`)\n  }\n  return await publishDoc(ceramic, doc)\n}\n\nexport async function publishSignedMap<T extends string = string>(\n  ceramic: CeramicApi,\n  signed: Record<T, Array<CeramicCommit>>\n): Promise<Record<T, TileDocument>> {\n  return await promiseMap(signed, async (commits) => await publishCommits(ceramic, commits))\n}\n\nexport async function publishIDXSignedDefinitions(\n  ceramic: CeramicApi,\n  definitions: SignedDefinitions = signedDefinitions\n): Promise<PublishedDefinitions> {\n  const signedMap = await publishSignedMap(ceramic, definitions)\n  return Object.entries(signedMap).reduce((acc, [key, doc]) => {\n    acc[key as DefinitionName] = doc.id.toString()\n    return acc\n  }, {} as PublishedDefinitions)\n}\n\nexport async function publishIDXSignedSchemas(\n  ceramic: CeramicApi,\n  schemas: SignedSchemas = signedSchemas\n): Promise<PublishedSchemas> {\n  const signedMap = await publishSignedMap(ceramic, schemas)\n  return Object.entries(signedMap).reduce((acc, [key, doc]) => {\n    acc[key as SchemaName] = doc.commitId.toUrl()\n    return acc\n  }, {} as PublishedSchemas)\n}\n\nexport async function publishIDXConfig(ceramic: CeramicApi): Promise<PublishedConfig> {\n  const [definitions, schemas] = await Promise.all([\n    publishIDXSignedDefinitions(ceramic),\n    publishIDXSignedSchemas(ceramic),\n  ])\n  return { definitions, schemas }\n}\n","import type { CeramicApi, StreamMetadata } from '@ceramicnetwork/common'\nimport type { StreamRef } from '@ceramicnetwork/streamid'\nimport type { TileDocument } from '@ceramicnetwork/stream-tile'\nimport { camelCase, pascalCase } from 'change-case'\nimport type { DagJWSResult } from 'dids'\n\nimport { decodeSignedMap, encodeSignedMap } from './encoding'\nimport { createDefinition, createTile, publishCommits, publishSchema } from './publishing'\nimport type { Definition, EncodedDagJWSResult, Schema } from './types'\nimport { docIDToString } from './utils'\n\nexport const SCHEMA_REF_ID = 'ceramic://schemaReference'\n\nexport type CreatedDoc = {\n  id: StreamRef\n  dependencies: Array<StreamRef>\n}\n\nexport type PublishedDocSet = {\n  definitions: Record<string, string>\n  schemas: Record<string, string>\n  tiles: Record<string, string>\n}\n\nexport type DocSetData<T> = {\n  docs: Record<string, T>\n  definitions: Array<string>\n  schemas: Array<string>\n}\nexport type SignedDocSet = DocSetData<Array<DagJWSResult>>\nexport type EncodedSignedDocSet = DocSetData<Array<EncodedDagJWSResult>>\n\n// TODO: import these types from IDX GraphQL lib once published\ntype FieldCommon = { required?: boolean }\ntype FieldType =\n  | { type: 'boolean' }\n  | { type: 'integer' }\n  | { type: 'float' }\n  | { type: 'string' }\n  | { type: 'list'; name: string }\n  | { type: 'object'; name: string }\n  | { type: 'reference'; name: string }\n\ntype Field = FieldCommon & FieldType\n\ntype ObjectFields = Record<string, Field>\n\ntype DocReference = {\n  id: string\n  schema: string\n}\n\ntype GraphQLDocSetRecords = {\n  index: Record<string, DocReference>\n  lists: Record<string, string>\n  nodes: Record<string, string>\n  objects: Record<string, ObjectFields>\n  references: Record<string, Array<string>>\n  roots: Record<string, DocReference>\n}\n\ntype AddSchemaOptions = {\n  name?: string\n  prefix: string\n}\n\n// Add a JSON schema to the provided records based on its type\nfunction addSchema(\n  records: GraphQLDocSetRecords,\n  schema: Schema,\n  options: AddSchemaOptions\n): string {\n  const providedTitle = options.name ?? (schema.title as string)\n  if (providedTitle == null) {\n    throw new Error('Schema must have a title')\n  }\n\n  const title = pascalCase(providedTitle)\n  const name = title.startsWith(options.prefix) ? title : options.prefix + title\n\n  if (schema.type === 'array' && schema.items != null) {\n    records.lists[name] = addSchema(records, schema.items, { prefix: name })\n  } else if (schema.type === 'object' && schema.properties != null) {\n    if (schema.$id === SCHEMA_REF_ID) {\n      const ref = (schema.properties as Record<string, any>).schema as {\n        const?: string\n        enum?: Array<string>\n      }\n      if (ref != null) {\n        if (ref.enum != null) {\n          records.references[name] = ref.enum\n        } else if (typeof ref.const === 'string') {\n          records.references[name] = [ref.const]\n        }\n      }\n    } else {\n      const requiredProps = (schema.required as Array<string>) ?? []\n      records.objects[name] = Object.entries(schema.properties as Record<string, any>).reduce(\n        (acc, [key, value]: [string, Schema]) => {\n          const prop = camelCase(key)\n          const opts = { name: (value.title as string) ?? key, prefix: name }\n          const required = requiredProps.includes(key)\n          if (value.type === 'array') {\n            acc[prop] = { required, type: 'list', name: addSchema(records, value, opts) }\n          } else if (value.type === 'object') {\n            const type = value.$id === SCHEMA_REF_ID ? 'reference' : 'object'\n            acc[prop] = { required, type, name: addSchema(records, value, opts) }\n          } else {\n            acc[prop] = { ...value, required } as Field\n          }\n          return acc\n        },\n        {} as Record<string, Field>\n      )\n    }\n  }\n\n  return name\n}\n\n// Recursively extract references to other schemas from a JSON schema arrays and objects\nfunction extractSchemaReferences(schema: Schema): Array<string> {\n  if (schema.type === 'array') {\n    return extractSchemaReferences(schema.items)\n  }\n\n  if (schema.type === 'object' && schema.properties != null) {\n    const props = schema.properties as Record<string, Schema>\n\n    if (schema.$id === SCHEMA_REF_ID) {\n      if (props.schema == null) {\n        return []\n      }\n      if (Array.isArray(props.schema.enum)) {\n        return props.schema.enum as Array<string>\n      }\n      if (typeof props.schema.const === 'string') {\n        return [props.schema.const]\n      }\n    }\n\n    return Object.values(props).flatMap(extractSchemaReferences)\n  }\n\n  return []\n}\n\nexport class DocSet {\n  _ceramic: CeramicApi\n  _docs: Record<string, Promise<TileDocument>> = {}\n  _definitions: Record<string, Promise<CreatedDoc>> = {}\n  _schemas: Record<string, Promise<CreatedDoc>> = {}\n  _schemaAliases: Record<string, string> = {}\n  _tiles: Record<string, Promise<CreatedDoc>> = {}\n\n  constructor(ceramic: CeramicApi) {\n    if (ceramic.did == null) {\n      throw new Error('Ceramic instance must be authenticated')\n    }\n    this._ceramic = ceramic\n  }\n\n  async loadCreated(created: Promise<CreatedDoc>): Promise<TileDocument> {\n    return await this.loadDoc((await created).id)\n  }\n\n  async loadDoc(streamID: StreamRef | string): Promise<TileDocument> {\n    const id = docIDToString(streamID)\n    if (this._docs[id] == null) {\n      this._docs[id] = this._ceramic.loadStream<TileDocument>(id)\n    }\n    return await this._docs[id]\n  }\n\n  get definitions(): Array<string> {\n    return Object.keys(this._definitions)\n  }\n\n  get schemas(): Array<string> {\n    return Object.keys(this._schemas)\n  }\n\n  get tiles(): Array<string> {\n    return Object.keys(this._tiles)\n  }\n\n  hasSchema(alias: string): boolean {\n    return this._schemas[alias] != null\n  }\n\n  getSchema(alias: string): Promise<CreatedDoc> | null {\n    return this._schemas[alias] ?? null\n  }\n\n  deleteSchema(alias: string): boolean {\n    if (this.hasSchema(alias)) {\n      delete this._schemas[alias]\n      return true\n    }\n    return false\n  }\n\n  createSchema(\n    name: string,\n    schema: Schema,\n    deps: Array<Promise<StreamRef>> = []\n  ): Promise<CreatedDoc> {\n    if (this.hasSchema(name)) {\n      throw new Error(`Schema ${name} already exists`)\n    }\n\n    this._schemas[name] = Promise.all(deps).then((dependencies) => {\n      return publishSchema(this._ceramic, { name, content: schema }).then(\n        (doc) => {\n          this._schemaAliases[doc.commitId.toUrl()] = name\n          return { id: doc.commitId, dependencies }\n        },\n        (reason: any) => {\n          delete this._schemas[name]\n          throw reason\n        }\n      )\n    })\n    return this._schemas[name]\n  }\n\n  async addSchema(schema: Schema, alias?: string): Promise<StreamRef> {\n    const name = alias ?? (schema.title as string | undefined)\n    if (name == null) {\n      throw new Error('Schema must have a title property or an alias must be provided')\n    }\n\n    const schemaRefs = new Set(extractSchemaReferences(schema))\n    const deps = Array.from(schemaRefs).map(async (id) => {\n      return await this.useExistingSchema(id)\n    })\n\n    const created = await this.createSchema(name, schema, deps)\n    return created.id\n  }\n\n  async useExistingSchema(id: StreamRef | string, alias?: string): Promise<StreamRef> {\n    const existingAlias = this._schemaAliases[docIDToString(id)]\n    if (existingAlias != null) {\n      const existing = this._schemas[existingAlias]\n      if (existing == null) {\n        throw new Error(`Alias ${existingAlias} exists for this schema but no schema is attached`)\n      }\n      return (await existing).id\n    }\n\n    const doc = await this.loadDoc(id)\n    const content = (doc.content ?? {}) as Schema\n    const name = alias ?? (content.title as string | undefined)\n    if (name == null) {\n      throw new Error('Schema must have a title property or an alias must be provided')\n    }\n\n    const schemaRefs = new Set(extractSchemaReferences(content))\n    this._schemas[name] = Promise.all(\n      Array.from(schemaRefs).map(async (id) => await this.useExistingSchema(id))\n    ).then(\n      (dependencies) => {\n        this._schemaAliases[doc.commitId.toUrl()] = name\n        return { id: doc.commitId, dependencies }\n      },\n      (reason: any) => {\n        delete this._schemas[name]\n        throw reason\n      }\n    )\n\n    return doc.commitId\n  }\n\n  hasDefinition(alias: string): boolean {\n    return this._definitions[alias] != null\n  }\n\n  getDefinition(alias: string): Promise<CreatedDoc> | null {\n    return this._definitions[alias] ?? null\n  }\n\n  deleteDefinition(alias: string): boolean {\n    if (this.hasDefinition(alias)) {\n      delete this._definitions[alias]\n      return true\n    }\n    return false\n  }\n\n  createDefinition(\n    alias: string,\n    definition: Definition,\n    deps: Array<Promise<StreamRef>> = []\n  ): Promise<CreatedDoc> {\n    if (this.hasDefinition(alias)) {\n      throw new Error(`Definition ${alias} already exists`)\n    }\n\n    this._definitions[alias] = Promise.all(deps).then((dependencies) => {\n      return createDefinition(this._ceramic, definition).then(\n        (doc) => ({ id: doc.id, dependencies }),\n        (reason: any) => {\n          delete this._definitions[alias]\n          throw reason\n        }\n      )\n    })\n    return this._definitions[alias]\n  }\n\n  async addDefinition(definition: Definition, alias = definition.name): Promise<StreamRef> {\n    const created = await this.createDefinition(alias, definition, [\n      this.useExistingSchema(definition.schema),\n    ])\n    return created.id\n  }\n\n  hasTile(alias: string): boolean {\n    return this._tiles[alias] != null\n  }\n\n  getTile(alias: string): Promise<CreatedDoc> | null {\n    return this._tiles[alias] ?? null\n  }\n\n  deleteTile(alias: string): boolean {\n    if (this.hasTile(alias)) {\n      delete this._tiles[alias]\n      return true\n    }\n    return false\n  }\n\n  createTile<T extends Record<string, unknown>>(\n    alias: string,\n    contents: T,\n    meta: Partial<StreamMetadata>,\n    deps: Array<Promise<StreamRef>> = []\n  ): Promise<CreatedDoc> {\n    if (this.hasTile(alias)) {\n      throw new Error(`Tile ${alias} already exists`)\n    }\n\n    this._tiles[alias] = Promise.all(deps).then((dependencies) => {\n      return createTile(this._ceramic, contents, meta).then(\n        (doc) => ({ id: doc.id, dependencies }),\n        (reason: any) => {\n          delete this._tiles[alias]\n          throw reason\n        }\n      )\n    })\n    return this._tiles[alias]\n  }\n\n  async addTile<T extends Record<string, unknown>>(\n    alias: string,\n    contents: T,\n    meta: Partial<StreamMetadata>\n  ): Promise<StreamRef> {\n    if (meta.schema == null) {\n      throw new Error('Missing schema to add tile')\n    }\n    const created = await this.createTile(alias, contents, meta, [\n      this.useExistingSchema(meta.schema),\n    ])\n    return created.id\n  }\n\n  // Export to maps of aliases to published doc IDs/URLs\n  async toPublished(): Promise<PublishedDocSet> {\n    const definitions: Record<string, string> = {}\n    const schemas: Record<string, string> = {}\n    const tiles: Record<string, string> = {}\n\n    const handleDefinitions = Object.entries(this._definitions).map(async ([alias, created]) => {\n      const { id } = await created\n      definitions[alias] = id.toString()\n    })\n    const handleSchemas = Object.entries(this._schemas).map(async ([alias, created]) => {\n      const { id } = await created\n      schemas[alias] = id.toUrl()\n    })\n    const handleTiles = Object.entries(this._tiles).map(async ([alias, created]) => {\n      const { id } = await created\n      tiles[alias] = id.toString()\n    })\n    await Promise.all([...handleDefinitions, ...handleSchemas, ...handleTiles])\n\n    return { definitions, schemas, tiles }\n  }\n\n  // Export to maps of aliases to signed commits, would allow to publish a docset on a Ceramic node\n  async toSigned(): Promise<SignedDocSet> {\n    const deps = new Set<string>()\n    const docs: Record<string, Array<DagJWSResult>> = {}\n    const definitions: Array<string> = []\n    const schemas: Array<string> = []\n\n    const addDoc = async (created: Promise<CreatedDoc>) => {\n      const { id, dependencies } = await created\n      dependencies.forEach((depid) => {\n        deps.add(depid.toString())\n      })\n      const streamid = id.baseID\n      const commits = await this._ceramic.loadStreamCommits(streamid)\n      docs[id.toString()] = commits.map((r) => r.value as DagJWSResult)\n    }\n\n    const handleDefinitions = Object.entries(this._definitions).map(async ([alias, created]) => {\n      definitions.push(alias)\n      return await addDoc(created)\n    })\n    const handleSchemas = Object.entries(this._schemas).map(async ([alias, created]) => {\n      schemas.push(alias)\n      await addDoc(created)\n    })\n    const handleTiles = Object.values(this._tiles).map(addDoc)\n    await Promise.all([...handleDefinitions, ...handleSchemas, ...handleTiles])\n\n    deps.forEach((id) => {\n      if (docs[id] == null) {\n        throw new Error(`Missing dependency: ${id}`)\n      }\n    })\n\n    return { docs, definitions, schemas }\n  }\n\n  // Export signed commits to JSON\n  async toSignedJSON(): Promise<EncodedSignedDocSet> {\n    const { docs, ...signed } = await this.toSigned()\n    return { ...signed, docs: encodeSignedMap(docs) }\n  }\n\n  // Export to GraphQL docset records for conversion to GraphQL schema\n  async toGraphQLDocSetRecords(): Promise<GraphQLDocSetRecords> {\n    // TODO: throw error on using reserved names:\n    // - \"node\" and \"index\" roots\n    // - \"id\" field in object if node\n\n    const records: GraphQLDocSetRecords = {\n      index: {},\n      lists: {},\n      nodes: {},\n      objects: {},\n      references: {},\n      roots: {},\n    }\n\n    const handleSchemas = this.schemas.map(async (name) => {\n      const created = this.getSchema(name)\n      if (created != null) {\n        const doc = await this.loadCreated(created)\n        const schema = doc.content as Schema\n        if (schema == null) {\n          throw new Error(`Could not load schema ${name}`)\n        }\n        records.nodes[doc.commitId.toUrl()] = addSchema(records, schema, { prefix: '' })\n      }\n    })\n\n    const handleDefinitions = this.definitions.map(async (name) => {\n      const created = this.getDefinition(name)\n      if (created != null) {\n        const doc = await this.loadCreated(created)\n        const definition = doc.content as Definition\n        if (definition == null) {\n          throw new Error(`Could not load definition ${name}`)\n        }\n        records.index[name] = { id: doc.id.toString(), schema: definition.schema }\n      }\n    })\n\n    const handleTiles = this.tiles.map(async (name) => {\n      const created = this.getTile(name)\n      if (created != null) {\n        const doc = await this.loadCreated(created)\n        const { schema } = doc.metadata\n        if (schema == null) {\n          throw new Error(`Missing schema for tile ${name}`)\n        }\n        records.roots[name] = { id: doc.id.toString(), schema }\n      }\n    })\n\n    await Promise.all([...handleSchemas, ...handleDefinitions, ...handleTiles])\n\n    return records\n  }\n}\n\n// Publish a signed docset to the given Ceramic node\nexport async function publishSignedDocSet(\n  ceramic: CeramicApi,\n  docSet: SignedDocSet\n): Promise<void> {\n  const schemas: Array<Promise<TileDocument>> = []\n  const others: Array<Promise<TileDocument>> = []\n\n  Object.entries(docSet.docs).forEach(([id, commits]) => {\n    const publish = publishCommits(ceramic, commits)\n    if (docSet.schemas.includes(id)) {\n      schemas.push(publish)\n    } else {\n      others.push(publish)\n    }\n  })\n\n  await Promise.all(schemas)\n  await Promise.all(others)\n}\n\n// Publish a JSON-encoded signed docset to the given Ceramic node\nexport async function publishEncodedSignedDocSet(\n  ceramic: CeramicApi,\n  { docs, ...docSet }: EncodedSignedDocSet\n): Promise<void> {\n  return await publishSignedDocSet(ceramic, { ...docSet, docs: decodeSignedMap(docs) })\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","docIDToString","id","applyMap","inputs","callFunc","entries","reduce","acc","promiseMap","all","map","results","signTile","did","data","schema","authenticated","header","controllers","createDagJWS","doctype","signIDXDefinitions","definitionSchema","definitions","definition","signIDXSchemas","schemas","createIDXDefinitions","alsoKnownAs","description","AlsoKnownAs","basicProfile","BasicProfile","cryptoAccounts","CryptoAccounts","threeIdKeychain","ThreeIdKeychain","createIDXSignedDefinitions","Definition","decodeDagJWS","payload","signatures","link","CID","encodeDagJWS","decodeDagJWSResult","jws","linkedBlock","fromString","encodeDagJWSResult","decodeSignedMap","records","encodeSignedMap","signedDefinitions","encodedDefinitions","signedSchemas","encodedSchemas","ajv","Ajv","strict","addFormats","validateDefinition","compile","DefinitionSchema","isValidDefinition","validateSchemaSecure","SecureSchema","isSecureSchema","PUBLISH_OPTS","anchor","publish","createTile","ceramic","content","metadata","TileDocument","doc","pin","add","publishDoc","loadStream","loaded","isEqual","update","createDefinition","publishedSchemas","updateDefinition","publishCommits","genesis","updates","createFromGenesis","commit","applyCommit","publishSchema","publishSignedMap","signed","commits","publishIDXSignedDefinitions","signedMap","publishIDXSignedSchemas","commitId","toUrl","publishIDXConfig","SCHEMA_REF_ID","addSchema","options","providedTitle","title","pascalCase","startsWith","prefix","items","lists","properties","$id","ref","references","requiredProps","required","objects","prop","camelCase","opts","includes","extractSchemaReferences","props","Array","isArray","flatMap","DocSet","_ceramic","loadCreated","created","loadDoc","streamID","_docs","hasSchema","alias","_schemas","getSchema","deleteSchema","createSchema","deps","dependencies","_schemaAliases","reason","schemaRefs","Set","from","useExistingSchema","existingAlias","existing","hasDefinition","_definitions","getDefinition","deleteDefinition","addDefinition","hasTile","_tiles","getTile","deleteTile","contents","meta","addTile","toPublished","tiles","handleDefinitions","handleSchemas","handleTiles","toSigned","docs","addDoc","depid","streamid","baseID","loadStreamCommits","r","toSignedJSON","toGraphQLDocSetRecords","index","nodes","roots","publishSignedDocSet","docSet","others","publishEncodedSignedDocSet"],"mappings":"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"}