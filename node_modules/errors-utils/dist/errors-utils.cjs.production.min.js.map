{"version":3,"file":"errors-utils.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["export type StackErrorJSON = {\n  code: string\n  message: string\n  metadata: Record<string, unknown>\n  name: string\n  stack: Array<StackErrorJSON>\n}\n\nexport class StackError extends Error {\n  static from(error: Error, code = 'SE0'): StackError {\n    if (error instanceof StackError) {\n      return error\n    }\n    const se = new StackError(code, error.message)\n    se.stack = error.stack\n    return se\n  }\n\n  static fromJSON(json: StackErrorJSON): StackError {\n    const error = new StackError(json.code, json.message)\n    error.errorStack = (json.stack ?? []).reduceRight((stack, e) => {\n      const err = StackError.fromJSON(e)\n      err.errorStack = stack\n      return [err, ...stack]\n    }, [] as Array<StackError>)\n    error.metadata = json.metadata ?? {}\n    error.name = json.name ?? 'StackError'\n    return error\n  }\n\n  code: string\n  errorStack: Array<StackError>\n  metadata: Record<string, unknown> = {}\n  name = 'StackError'\n\n  constructor(code: string, message: string, wrapError?: Error) {\n    super(message)\n    Object.setPrototypeOf(this, StackError.prototype)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StackError)\n    }\n\n    this.code = code\n    this.errorStack = wrapError ? StackError.from(wrapError).toErrorStack() : []\n  }\n\n  toErrorStack(): Array<StackError> {\n    return [this, ...this.errorStack]\n  }\n\n  toJSON(withStack = true): StackErrorJSON {\n    return {\n      code: this.code,\n      message: this.message,\n      metadata: this.metadata,\n      name: this.name,\n      stack: withStack ? this.errorStack.map(e => e.toJSON(false)) : []\n    }\n  }\n\n  toString(): string {\n    return `[${this.code}] ${this.message}`\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function createNamespaceError(namespace: string, metadata: Record<string, unknown> = {}) {\n  return class NamespaceError extends StackError {\n    constructor(code: string | number, message: string, wrapError?: Error) {\n      super(`${namespace}${code}`, message, wrapError)\n      Object.setPrototypeOf(this, NamespaceError.prototype)\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, NamespaceError)\n      }\n\n      this.metadata = metadata\n    }\n  }\n}\n\nexport function assert(condition: boolean, message = 'Assertion failed'): asserts condition {\n  if (!condition) {\n    throw new Error(message)\n  }\n}\n\nexport function assertAs<T extends typeof StackError>(\n  condition: boolean,\n  ErrorClass: T,\n  ...args: ConstructorParameters<T>\n): asserts condition {\n  if (!condition) {\n    // @ts-ignore args\n    throw new ErrorClass(...args)\n  }\n}\n"],"names":["StackError","code","message","wrapError","Object","setPrototypeOf","prototype","Error","captureStackTrace","errorStack","from","toErrorStack","error","se","stack","fromJSON","json","reduceRight","e","err","metadata","name","this","toJSON","withStack","map","toString","condition","ErrorClass","args","namespace","NamespaceError"],"mappings":"05CAQaA,yBA2BCC,EAAcC,EAAiBC,8BACnCD,mBAJ4B,UAC7B,aAILE,OAAOC,oBAAqBL,EAAWM,WACnCC,MAAMC,mBACRD,MAAMC,uBAAwBR,KAG3BC,KAAOA,IACPQ,WAAaN,EAAYH,EAAWU,KAAKP,GAAWQ,eAAiB,cAlCrED,KAAP,SAAYE,EAAcX,eAAAA,IAAAA,EAAO,OAC3BW,aAAiBZ,SACZY,MAEHC,EAAK,IAAIb,EAAWC,EAAMW,EAAMV,gBACtCW,EAAGC,MAAQF,EAAME,MACVD,KAGFE,SAAP,SAAgBC,aACRJ,EAAQ,IAAIZ,EAAWgB,EAAKf,KAAMe,EAAKd,gBAC7CU,EAAMH,qBAAcO,EAAKF,SAAS,IAAIG,aAAY,SAACH,EAAOI,OAClDC,EAAMnB,EAAWe,SAASG,UAChCC,EAAIV,WAAaK,GACTK,UAAQL,KACf,IACHF,EAAMQ,kBAAWJ,EAAKI,YAAY,GAClCR,EAAMS,cAAOL,EAAKK,QAAQ,aACnBT,8BAmBTD,aAAA,kBACUW,aAASA,KAAKb,eAGxBc,OAAA,SAAOC,mBAAAA,IAAAA,GAAY,GACV,CACLvB,KAAMqB,KAAKrB,KACXC,QAASoB,KAAKpB,QACdkB,SAAUE,KAAKF,SACfC,KAAMC,KAAKD,KACXP,MAAOU,EAAYF,KAAKb,WAAWgB,KAAI,SAAAP,UAAKA,EAAEK,QAAO,MAAU,OAInEG,SAAA,qBACaJ,KAAKrB,UAASqB,KAAKpB,cArDFK,qDAwEToB,EAAoBzB,eAAAA,IAAAA,EAAU,qBAC9CyB,QACG,IAAIpB,MAAML,8BAKlByB,EACAC,OAGKD,EAAW,4BAFbE,mCAAAA,4BAISD,EAAcC,2CA3BSC,EAAmBV,mBAAAA,IAAAA,EAAoC,2BAE5EnB,EAAuBC,EAAiBC,iCACzC2B,EAAY7B,EAAQC,EAASC,SACtCC,OAAOC,oBAAqB0B,EAAezB,WACvCC,MAAMC,mBACRD,MAAMC,uBAAwBuB,KAG3BX,SAAWA,qBARgBpB"}