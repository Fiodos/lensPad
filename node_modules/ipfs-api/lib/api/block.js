'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var argCommand = require('../cmd-helpers').argCommand;

module.exports = function (send) {
  return {
    get: argCommand(send, 'block/get'),
    stat: argCommand(send, 'block/stat'),
    put: function put(file, cb) {
      if (Array.isArray(file)) {
        var _ret = function () {
          var err = new Error('block.put() only accepts 1 file');
          if (typeof cb !== 'function' && typeof Promise !== 'undefined') {
            return {
              v: new Promise(function (resolve, reject) {
                return reject(err);
              })
            };
          }
          return {
            v: cb(err)
          };
        }();

        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
      }
      return send('block/put', null, null, file, cb);
    }
  };
};