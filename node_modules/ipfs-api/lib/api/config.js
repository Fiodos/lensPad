'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var argCommand = require('../cmd-helpers').argCommand;

module.exports = function (send) {
  return {
    get: argCommand(send, 'config'),
    set: function set(key, value, opts, cb) {
      if (typeof opts === 'function') {
        cb = opts;
        opts = {};
      }

      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
        value = JSON.stringify(value);
        opts = { json: true };
      } else if (typeof value === 'boolean') {
        value = value.toString();
        opts = { bool: true };
      }

      return send('config', [key, value], opts, null, cb);
    },
    show: function show(cb) {
      return send('config/show', null, null, null, true, cb);
    },
    replace: function replace(file, cb) {
      return send('config/replace', null, null, file, cb);
    }
  };
};