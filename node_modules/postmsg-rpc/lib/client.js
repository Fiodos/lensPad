'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = caller;
exports.call = call;

var _shortid = require('shortid');

var _shortid2 = _interopRequireDefault(_shortid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function caller(funcName, opts) {
  opts = opts || {};

  var addListener = opts.addListener || window.addEventListener;
  var removeListener = opts.removeListener || window.removeEventListener;
  var postMessage = opts.postMessage || window.postMessage;
  var targetOrigin = opts.targetOrigin || '*';
  var getMessageData = opts.getMessageData || function (event) {
    return event.data;
  };

  return function () {
    var msg = {
      sender: 'postmsg-rpc/client',
      id: (0, _shortid2.default)(),
      func: funcName,
      args: Array.from(arguments)
    };

    var cancel = void 0;

    var response = new Promise(function (resolve, reject) {
      var handler = function handler() {
        var data = getMessageData.apply(null, arguments);
        if (!data) return;
        if (data.sender !== 'postmsg-rpc/server' || data.id !== msg.id) return;
        removeListener('message', handler);

        if (data.err) {
          var err = new Error('Unexpected error calling ' + funcName);
          Object.assign(err, data.err);
          return reject(err);
        }

        resolve(data.res);
      };

      cancel = function cancel() {
        removeListener('message', handler);
        var err = new Error('Canceled call to ' + funcName);
        err.isCanceled = true;
        reject(err);
      };

      addListener('message', handler);
      postMessage(msg, targetOrigin);
    });

    response.cancel = function () {
      return cancel();
    };

    return response;
  };
}

function call(funcName) {
  return caller(funcName).apply(null, [].slice.call(arguments, 1));
}
//# sourceMappingURL=client.js.map