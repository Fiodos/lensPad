{"version":3,"sources":["../src/client.js"],"names":["caller","call","funcName","opts","addListener","window","addEventListener","removeListener","removeEventListener","postMessage","targetOrigin","getMessageData","event","data","msg","sender","id","func","args","Array","from","arguments","cancel","response","Promise","resolve","reject","handler","apply","err","Error","Object","assign","res","isCanceled","slice"],"mappings":";;;;;kBAEwBA,M;QAoDRC,I,GAAAA,I;;AAtDhB;;;;;;AAEe,SAASD,MAAT,CAAiBE,QAAjB,EAA2BC,IAA3B,EAAiC;AAC9CA,SAAOA,QAAQ,EAAf;;AAEA,MAAMC,cAAcD,KAAKC,WAAL,IAAoBC,OAAOC,gBAA/C;AACA,MAAMC,iBAAiBJ,KAAKI,cAAL,IAAuBF,OAAOG,mBAArD;AACA,MAAMC,cAAcN,KAAKM,WAAL,IAAoBJ,OAAOI,WAA/C;AACA,MAAMC,eAAeP,KAAKO,YAAL,IAAqB,GAA1C;AACA,MAAMC,iBAAiBR,KAAKQ,cAAL,IAAwB,UAACC,KAAD;AAAA,WAAWA,MAAMC,IAAjB;AAAA,GAA/C;;AAEA,SAAO,YAAY;AACjB,QAAMC,MAAM;AACVC,cAAQ,oBADE;AAEVC,UAAI,wBAFM;AAGVC,YAAMf,QAHI;AAIVgB,YAAMC,MAAMC,IAAN,CAAWC,SAAX;AAJI,KAAZ;;AAOA,QAAIC,eAAJ;;AAEA,QAAMC,WAAW,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChD,UAAMC,UAAU,SAAVA,OAAU,GAAY;AAC1B,YAAMd,OAAOF,eAAeiB,KAAf,CAAqB,IAArB,EAA2BP,SAA3B,CAAb;AACA,YAAI,CAACR,IAAL,EAAW;AACX,YAAIA,KAAKE,MAAL,KAAgB,oBAAhB,IAAwCF,KAAKG,EAAL,KAAYF,IAAIE,EAA5D,EAAgE;AAChET,uBAAe,SAAf,EAA0BoB,OAA1B;;AAEA,YAAId,KAAKgB,GAAT,EAAc;AACZ,cAAMA,MAAM,IAAIC,KAAJ,+BAAsC5B,QAAtC,CAAZ;AACA6B,iBAAOC,MAAP,CAAcH,GAAd,EAAmBhB,KAAKgB,GAAxB;AACA,iBAAOH,OAAOG,GAAP,CAAP;AACD;;AAEDJ,gBAAQZ,KAAKoB,GAAb;AACD,OAbD;;AAeAX,eAAS,kBAAM;AACbf,uBAAe,SAAf,EAA0BoB,OAA1B;AACA,YAAME,MAAM,IAAIC,KAAJ,uBAA8B5B,QAA9B,CAAZ;AACA2B,YAAIK,UAAJ,GAAiB,IAAjB;AACAR,eAAOG,GAAP;AACD,OALD;;AAOAzB,kBAAY,SAAZ,EAAuBuB,OAAvB;AACAlB,kBAAYK,GAAZ,EAAiBJ,YAAjB;AACD,KAzBgB,CAAjB;;AA2BAa,aAASD,MAAT,GAAkB;AAAA,aAAMA,QAAN;AAAA,KAAlB;;AAEA,WAAOC,QAAP;AACD,GAxCD;AAyCD;;AAEM,SAAStB,IAAT,CAAeC,QAAf,EAAyB;AAC9B,SAAOF,OAAOE,QAAP,EAAiB0B,KAAjB,CAAuB,IAAvB,EAA6B,GAAGO,KAAH,CAASlC,IAAT,CAAcoB,SAAd,EAAyB,CAAzB,CAA7B,CAAP;AACD","file":"client.js","sourcesContent":["import shortid from 'shortid'\n\nexport default function caller (funcName, opts) {\n  opts = opts || {}\n\n  const addListener = opts.addListener || window.addEventListener\n  const removeListener = opts.removeListener || window.removeEventListener\n  const postMessage = opts.postMessage || window.postMessage\n  const targetOrigin = opts.targetOrigin || '*'\n  const getMessageData = opts.getMessageData || ((event) => event.data)\n\n  return function () {\n    const msg = {\n      sender: 'postmsg-rpc/client',\n      id: shortid(),\n      func: funcName,\n      args: Array.from(arguments)\n    }\n\n    let cancel\n\n    const response = new Promise((resolve, reject) => {\n      const handler = function () {\n        const data = getMessageData.apply(null, arguments)\n        if (!data) return\n        if (data.sender !== 'postmsg-rpc/server' || data.id !== msg.id) return\n        removeListener('message', handler)\n\n        if (data.err) {\n          const err = new Error(`Unexpected error calling ${funcName}`)\n          Object.assign(err, data.err)\n          return reject(err)\n        }\n\n        resolve(data.res)\n      }\n\n      cancel = () => {\n        removeListener('message', handler)\n        const err = new Error(`Canceled call to ${funcName}`)\n        err.isCanceled = true\n        reject(err)\n      }\n\n      addListener('message', handler)\n      postMessage(msg, targetOrigin)\n    })\n\n    response.cancel = () => cancel()\n\n    return response\n  }\n}\n\nexport function call (funcName) {\n  return caller(funcName).apply(null, [].slice.call(arguments, 1))\n}\n"]}