{"version":3,"sources":["../src/server.js"],"names":["expose","funcName","func","opts","addListener","window","addEventListener","removeListener","removeEventListener","postMessage","targetOrigin","getMessageData","event","data","isCallback","handler","apply","arguments","sender","msg","id","onSuccess","res","onError","err","Object","assign","message","output","payload","process","env","NODE_ENV","stack","args","concat","Promise","resolve","then","catch","close"],"mappings":";;;;;kBAAwBA,M;AAAT,SAASA,MAAT,CAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACpDA,SAAOA,QAAQ,EAAf;;AAEA,MAAMC,cAAcD,KAAKC,WAAL,IAAoBC,OAAOC,gBAA/C;AACA,MAAMC,iBAAiBJ,KAAKI,cAAL,IAAuBF,OAAOG,mBAArD;AACA,MAAMC,cAAcN,KAAKM,WAAL,IAAoBJ,OAAOI,WAA/C;AACA,MAAMC,eAAeP,KAAKO,YAAL,IAAqB,GAA1C;AACA,MAAMC,iBAAiBR,KAAKQ,cAAL,IAAwB,UAACC,KAAD;AAAA,WAAWA,MAAMC,IAAjB;AAAA,GAA/C;AACA,MAAMC,aAAaX,KAAKW,UAAL,IAAmB,KAAtC;;AAEA,MAAMC,UAAU,SAAVA,OAAU,GAAY;AAC1B,QAAMF,OAAOF,eAAeK,KAAf,CAAqB,IAArB,EAA2BC,SAA3B,CAAb;AACA,QAAI,CAACJ,IAAL,EAAW;AACX,QAAIA,KAAKK,MAAL,KAAgB,oBAAhB,IAAwCL,KAAKX,IAAL,KAAcD,QAA1D,EAAoE;;AAEpE,QAAMkB,MAAM,EAAED,QAAQ,oBAAV,EAAgCE,IAAIP,KAAKO,EAAzC,EAAZ;;AAEA,QAAMC,YAAY,SAAZA,SAAY,CAACC,GAAD,EAAS;AACzBH,UAAIG,GAAJ,GAAUA,GAAV;AACAb,kBAAYU,GAAZ,EAAiBT,YAAjB;AACD,KAHD;;AAKA,QAAMa,UAAU,SAAVA,OAAU,CAACC,GAAD,EAAS;AACvBL,UAAIK,GAAJ,GAAUC,OAAOC,MAAP,CAAc,EAAEC,SAASH,IAAIG,OAAf,EAAd,EAAwCH,IAAII,MAAJ,IAAcJ,IAAII,MAAJ,CAAWC,OAAjE,CAAV;;AAEA,UAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCb,YAAIK,GAAJ,CAAQS,KAAR,GAAgBd,IAAIK,GAAJ,CAAQS,KAAR,IAAiBT,IAAIS,KAArC;AACD;;AAEDxB,kBAAYU,GAAZ,EAAiBT,YAAjB;AACD,KARD;;AAUA,QAAII,UAAJ,EAAgB;AACdZ,WAAKc,KAAL,CAAW,IAAX,EAAiBH,KAAKqB,IAAL,CAAUC,MAAV,CAAiB,UAACX,GAAD,EAAMF,GAAN,EAAc;AAC9C,YAAIE,GAAJ,EAAS,OAAOD,QAAQC,GAAR,CAAP;AACTH,kBAAUC,GAAV;AACD,OAHgB,CAAjB;AAID,KALD,MAKO;AACL,UAAMA,MAAMpB,KAAKc,KAAL,CAAW,IAAX,EAAiBH,KAAKqB,IAAtB,CAAZ;AACAE,cAAQC,OAAR,CAAgBf,GAAhB,EAAqBgB,IAArB,CAA0BjB,SAA1B,EAAqCkB,KAArC,CAA2ChB,OAA3C;AACD;AACF,GA/BD;;AAiCAnB,cAAY,SAAZ,EAAuBW,OAAvB;;AAEA,SAAO,EAAEyB,OAAO;AAAA,aAAMjC,eAAe,SAAf,EAA0BQ,OAA1B,CAAN;AAAA,KAAT,EAAP;AACD","file":"server.js","sourcesContent":["export default function expose (funcName, func, opts) {\n  opts = opts || {}\n\n  const addListener = opts.addListener || window.addEventListener\n  const removeListener = opts.removeListener || window.removeEventListener\n  const postMessage = opts.postMessage || window.postMessage\n  const targetOrigin = opts.targetOrigin || '*'\n  const getMessageData = opts.getMessageData || ((event) => event.data)\n  const isCallback = opts.isCallback || false\n\n  const handler = function () {\n    const data = getMessageData.apply(null, arguments)\n    if (!data) return\n    if (data.sender !== 'postmsg-rpc/client' || data.func !== funcName) return\n\n    const msg = { sender: 'postmsg-rpc/server', id: data.id }\n\n    const onSuccess = (res) => {\n      msg.res = res\n      postMessage(msg, targetOrigin)\n    }\n\n    const onError = (err) => {\n      msg.err = Object.assign({ message: err.message }, err.output && err.output.payload)\n\n      if (process.env.NODE_ENV !== 'production') {\n        msg.err.stack = msg.err.stack || err.stack\n      }\n\n      postMessage(msg, targetOrigin)\n    }\n\n    if (isCallback) {\n      func.apply(null, data.args.concat((err, res) => {\n        if (err) return onError(err)\n        onSuccess(res)\n      }))\n    } else {\n      const res = func.apply(null, data.args)\n      Promise.resolve(res).then(onSuccess).catch(onError)\n    }\n  }\n\n  addListener('message', handler)\n\n  return { close: () => removeListener('message', handler) }\n}\n"]}